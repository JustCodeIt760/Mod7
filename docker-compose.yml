version: '3.8'

services:
  # Flask backend service
  backend:
    build:
      context: ./app # Change this to ./app
      dockerfile: Dockerfile # Just Dockerfile since context is app directory
    container_name: backend
    environment:
      - FLASK_APP=__init__.py # Change this to match what worked
      - FLASK_DEBUG=1 # Use this instead of FLASK_ENV
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SCHEMA=${SCHEMA} # Add this if you're using schema
      - REFRESH_DB=${REFRESH_DB:-false}
    ports:
      - '5000:5000'
    volumes:
      - ./app:/app
      - ./react-app/build:/app/react-app/build # Add this if needed
    depends_on:
      db:
        condition: service_healthy

  # React frontend service
  frontend:
    build:
      context: ./react-vite
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./react-vite:/app
      - /app/node_modules
    depends_on:
      - backend

  # PostgreSQL database service
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
