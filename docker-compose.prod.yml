version: '3.8'

services:
  backend:
    build:
      context: ./app
      dockerfile: Dockerfile.prod # Separate production Dockerfile if needed
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    ports:
      - '5000:5000'
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped # Automatic restart in production

  frontend:
    build:
      context: ./react-vite
      dockerfile: Dockerfile.prod # Separate production Dockerfile
    ports:
      - '80:80' # Production typically serves on port 80
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - '5432' # Only expose to other containers, not host
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
